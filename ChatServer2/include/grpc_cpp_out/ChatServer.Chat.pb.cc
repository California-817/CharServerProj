// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ChatServer.Chat.proto
// Protobuf C++ Version: 5.29.0

#include "ChatServer.Chat.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ChatServer {
namespace Chat {

inline constexpr TextChatData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msgid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msgcontent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TextChatData::TextChatData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TextChatDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextChatDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextChatDataDefaultTypeInternal() {}
  union {
    TextChatData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextChatDataDefaultTypeInternal _TextChatData_default_instance_;

inline constexpr AuthFriendRsp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_{0},
        fromuid_{0},
        touid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AuthFriendRsp::AuthFriendRsp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuthFriendRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthFriendRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthFriendRspDefaultTypeInternal() {}
  union {
    AuthFriendRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthFriendRspDefaultTypeInternal _AuthFriendRsp_default_instance_;

inline constexpr AuthFriendReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : fromuid_{0},
        touid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AuthFriendReq::AuthFriendReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuthFriendReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthFriendReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthFriendReqDefaultTypeInternal() {}
  union {
    AuthFriendReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthFriendReqDefaultTypeInternal _AuthFriendReq_default_instance_;

inline constexpr AddFriendRsp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_{0},
        applyuid_{0},
        touid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddFriendRsp::AddFriendRsp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddFriendRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddFriendRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddFriendRspDefaultTypeInternal() {}
  union {
    AddFriendRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddFriendRspDefaultTypeInternal _AddFriendRsp_default_instance_;

inline constexpr AddFriendReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        icon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nick_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        applyuid_{0},
        sex_{0},
        touid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddFriendReq::AddFriendReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddFriendReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddFriendReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddFriendReqDefaultTypeInternal() {}
  union {
    AddFriendReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddFriendReqDefaultTypeInternal _AddFriendReq_default_instance_;

inline constexpr TextChatMsgRsp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : textmsgs_{},
        fromid_{0},
        toid_{0},
        error_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TextChatMsgRsp::TextChatMsgRsp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TextChatMsgRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextChatMsgRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextChatMsgRspDefaultTypeInternal() {}
  union {
    TextChatMsgRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextChatMsgRspDefaultTypeInternal _TextChatMsgRsp_default_instance_;

inline constexpr TextChatMsgReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : textmsgs_{},
        fromid_{0},
        toid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TextChatMsgReq::TextChatMsgReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TextChatMsgReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextChatMsgReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextChatMsgReqDefaultTypeInternal() {}
  union {
    TextChatMsgReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextChatMsgReqDefaultTypeInternal _TextChatMsgReq_default_instance_;
}  // namespace Chat
}  // namespace ChatServer
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ChatServer_2eChat_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ChatServer_2eChat_2eproto = nullptr;
const ::uint32_t
    TableStruct_ChatServer_2eChat_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendReq, _impl_.applyuid_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendReq, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendReq, _impl_.desc_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendReq, _impl_.icon_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendReq, _impl_.nick_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendReq, _impl_.sex_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendReq, _impl_.touid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendRsp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendRsp, _impl_.error_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendRsp, _impl_.applyuid_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AddFriendRsp, _impl_.touid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AuthFriendReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AuthFriendReq, _impl_.fromuid_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AuthFriendReq, _impl_.touid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AuthFriendRsp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AuthFriendRsp, _impl_.error_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AuthFriendRsp, _impl_.fromuid_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::AuthFriendRsp, _impl_.touid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatMsgReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatMsgReq, _impl_.fromid_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatMsgReq, _impl_.toid_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatMsgReq, _impl_.textmsgs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatData, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatData, _impl_.msgcontent_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatMsgRsp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatMsgRsp, _impl_.error_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatMsgRsp, _impl_.fromid_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatMsgRsp, _impl_.toid_),
        PROTOBUF_FIELD_OFFSET(::ChatServer::Chat::TextChatMsgRsp, _impl_.textmsgs_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ChatServer::Chat::AddFriendReq)},
        {15, -1, -1, sizeof(::ChatServer::Chat::AddFriendRsp)},
        {26, -1, -1, sizeof(::ChatServer::Chat::AuthFriendReq)},
        {36, -1, -1, sizeof(::ChatServer::Chat::AuthFriendRsp)},
        {47, -1, -1, sizeof(::ChatServer::Chat::TextChatMsgReq)},
        {58, -1, -1, sizeof(::ChatServer::Chat::TextChatData)},
        {68, -1, -1, sizeof(::ChatServer::Chat::TextChatMsgRsp)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ChatServer::Chat::_AddFriendReq_default_instance_._instance,
    &::ChatServer::Chat::_AddFriendRsp_default_instance_._instance,
    &::ChatServer::Chat::_AuthFriendReq_default_instance_._instance,
    &::ChatServer::Chat::_AuthFriendRsp_default_instance_._instance,
    &::ChatServer::Chat::_TextChatMsgReq_default_instance_._instance,
    &::ChatServer::Chat::_TextChatData_default_instance_._instance,
    &::ChatServer::Chat::_TextChatMsgRsp_default_instance_._instance,
};
const char descriptor_table_protodef_ChatServer_2eChat_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025ChatServer.Chat.proto\022\017ChatServer.Chat"
    "\"t\n\014AddFriendReq\022\020\n\010applyuid\030\001 \001(\005\022\014\n\004na"
    "me\030\002 \001(\t\022\014\n\004desc\030\003 \001(\t\022\014\n\004icon\030\004 \001(\t\022\014\n\004"
    "nick\030\005 \001(\t\022\013\n\003sex\030\006 \001(\005\022\r\n\005touid\030\007 \001(\005\">"
    "\n\014AddFriendRsp\022\r\n\005error\030\001 \001(\005\022\020\n\010applyui"
    "d\030\002 \001(\005\022\r\n\005touid\030\003 \001(\005\"/\n\rAuthFriendReq\022"
    "\017\n\007fromuid\030\001 \001(\005\022\r\n\005touid\030\002 \001(\005\">\n\rAuthF"
    "riendRsp\022\r\n\005error\030\001 \001(\005\022\017\n\007fromuid\030\002 \001(\005"
    "\022\r\n\005touid\030\003 \001(\005\"_\n\016TextChatMsgReq\022\016\n\006fro"
    "mid\030\001 \001(\005\022\014\n\004toid\030\002 \001(\005\022/\n\010textmsgs\030\003 \003("
    "\0132\035.ChatServer.Chat.TextChatData\"1\n\014Text"
    "ChatData\022\r\n\005msgid\030\001 \001(\t\022\022\n\nmsgcontent\030\002 "
    "\001(\t\"n\n\016TextChatMsgRsp\022\r\n\005error\030\004 \001(\005\022\016\n\006"
    "fromid\030\001 \001(\005\022\014\n\004toid\030\002 \001(\005\022/\n\010textmsgs\030\003"
    " \003(\0132\035.ChatServer.Chat.TextChatData2\217\002\n\013"
    "ChatService\022Q\n\017NotifyAddFriend\022\035.ChatSer"
    "ver.Chat.AddFriendReq\032\035.ChatServer.Chat."
    "AddFriendRsp\"\000\022T\n\020NotifyAuthFriend\022\036.Cha"
    "tServer.Chat.AuthFriendReq\032\036.ChatServer."
    "Chat.AuthFriendRsp\"\000\022W\n\021NotifyTextChatMs"
    "g\022\037.ChatServer.Chat.TextChatMsgReq\032\037.Cha"
    "tServer.Chat.TextChatMsgRsp\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_ChatServer_2eChat_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ChatServer_2eChat_2eproto = {
    false,
    false,
    877,
    descriptor_table_protodef_ChatServer_2eChat_2eproto,
    "ChatServer.Chat.proto",
    &descriptor_table_ChatServer_2eChat_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_ChatServer_2eChat_2eproto::offsets,
    file_level_enum_descriptors_ChatServer_2eChat_2eproto,
    file_level_service_descriptors_ChatServer_2eChat_2eproto,
};
namespace ChatServer {
namespace Chat {
// ===================================================================

class AddFriendReq::_Internal {
 public:
};

AddFriendReq::AddFriendReq(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ChatServer.Chat.AddFriendReq)
}
inline PROTOBUF_NDEBUG_INLINE AddFriendReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ChatServer::Chat::AddFriendReq& from_msg)
      : name_(arena, from.name_),
        desc_(arena, from.desc_),
        icon_(arena, from.icon_),
        nick_(arena, from.nick_),
        _cached_size_{0} {}

AddFriendReq::AddFriendReq(
    ::google::protobuf::Arena* arena,
    const AddFriendReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddFriendReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, applyuid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, applyuid_),
           offsetof(Impl_, touid_) -
               offsetof(Impl_, applyuid_) +
               sizeof(Impl_::touid_));

  // @@protoc_insertion_point(copy_constructor:ChatServer.Chat.AddFriendReq)
}
inline PROTOBUF_NDEBUG_INLINE AddFriendReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        desc_(arena),
        icon_(arena),
        nick_(arena),
        _cached_size_{0} {}

inline void AddFriendReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, applyuid_),
           0,
           offsetof(Impl_, touid_) -
               offsetof(Impl_, applyuid_) +
               sizeof(Impl_::touid_));
}
AddFriendReq::~AddFriendReq() {
  // @@protoc_insertion_point(destructor:ChatServer.Chat.AddFriendReq)
  SharedDtor(*this);
}
inline void AddFriendReq::SharedDtor(MessageLite& self) {
  AddFriendReq& this_ = static_cast<AddFriendReq&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.desc_.Destroy();
  this_._impl_.icon_.Destroy();
  this_._impl_.nick_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AddFriendReq::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AddFriendReq(arena);
}
constexpr auto AddFriendReq::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AddFriendReq),
                                            alignof(AddFriendReq));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AddFriendReq::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AddFriendReq_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AddFriendReq::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AddFriendReq>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AddFriendReq::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AddFriendReq>(), &AddFriendReq::ByteSizeLong,
            &AddFriendReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_._cached_size_),
        false,
    },
    &AddFriendReq::kDescriptorMethods,
    &descriptor_table_ChatServer_2eChat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AddFriendReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 53, 2> AddFriendReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ChatServer::Chat::AddFriendReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 applyuid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AddFriendReq, _impl_.applyuid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.applyuid_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.name_)}},
    // string desc = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.desc_)}},
    // string icon = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.icon_)}},
    // string nick = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.nick_)}},
    // int32 sex = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AddFriendReq, _impl_.sex_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.sex_)}},
    // int32 touid = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AddFriendReq, _impl_.touid_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.touid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 applyuid = 1;
    {PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.applyuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string desc = 3;
    {PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.desc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string icon = 4;
    {PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.icon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nick = 5;
    {PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.nick_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 sex = 6;
    {PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.sex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 touid = 7;
    {PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.touid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\34\0\4\4\4\4\0\0"
    "ChatServer.Chat.AddFriendReq"
    "name"
    "desc"
    "icon"
    "nick"
  }},
};

PROTOBUF_NOINLINE void AddFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatServer.Chat.AddFriendReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.desc_.ClearToEmpty();
  _impl_.icon_.ClearToEmpty();
  _impl_.nick_.ClearToEmpty();
  ::memset(&_impl_.applyuid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.touid_) -
      reinterpret_cast<char*>(&_impl_.applyuid_)) + sizeof(_impl_.touid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AddFriendReq::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AddFriendReq& this_ = static_cast<const AddFriendReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AddFriendReq::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AddFriendReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ChatServer.Chat.AddFriendReq)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 applyuid = 1;
          if (this_._internal_applyuid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_applyuid(), target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ChatServer.Chat.AddFriendReq.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string desc = 3;
          if (!this_._internal_desc().empty()) {
            const std::string& _s = this_._internal_desc();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ChatServer.Chat.AddFriendReq.desc");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string icon = 4;
          if (!this_._internal_icon().empty()) {
            const std::string& _s = this_._internal_icon();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ChatServer.Chat.AddFriendReq.icon");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string nick = 5;
          if (!this_._internal_nick().empty()) {
            const std::string& _s = this_._internal_nick();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ChatServer.Chat.AddFriendReq.nick");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // int32 sex = 6;
          if (this_._internal_sex() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_sex(), target);
          }

          // int32 touid = 7;
          if (this_._internal_touid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_touid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ChatServer.Chat.AddFriendReq)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AddFriendReq::ByteSizeLong(const MessageLite& base) {
          const AddFriendReq& this_ = static_cast<const AddFriendReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AddFriendReq::ByteSizeLong() const {
          const AddFriendReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ChatServer.Chat.AddFriendReq)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string desc = 3;
            if (!this_._internal_desc().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_desc());
            }
            // string icon = 4;
            if (!this_._internal_icon().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_icon());
            }
            // string nick = 5;
            if (!this_._internal_nick().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nick());
            }
            // int32 applyuid = 1;
            if (this_._internal_applyuid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_applyuid());
            }
            // int32 sex = 6;
            if (this_._internal_sex() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_sex());
            }
            // int32 touid = 7;
            if (this_._internal_touid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_touid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AddFriendReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddFriendReq*>(&to_msg);
  auto& from = static_cast<const AddFriendReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ChatServer.Chat.AddFriendReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_desc().empty()) {
    _this->_internal_set_desc(from._internal_desc());
  }
  if (!from._internal_icon().empty()) {
    _this->_internal_set_icon(from._internal_icon());
  }
  if (!from._internal_nick().empty()) {
    _this->_internal_set_nick(from._internal_nick());
  }
  if (from._internal_applyuid() != 0) {
    _this->_impl_.applyuid_ = from._impl_.applyuid_;
  }
  if (from._internal_sex() != 0) {
    _this->_impl_.sex_ = from._impl_.sex_;
  }
  if (from._internal_touid() != 0) {
    _this->_impl_.touid_ = from._impl_.touid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddFriendReq::CopyFrom(const AddFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatServer.Chat.AddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddFriendReq::InternalSwap(AddFriendReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.icon_, &other->_impl_.icon_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nick_, &other->_impl_.nick_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.touid_)
      + sizeof(AddFriendReq::_impl_.touid_)
      - PROTOBUF_FIELD_OFFSET(AddFriendReq, _impl_.applyuid_)>(
          reinterpret_cast<char*>(&_impl_.applyuid_),
          reinterpret_cast<char*>(&other->_impl_.applyuid_));
}

::google::protobuf::Metadata AddFriendReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddFriendRsp::_Internal {
 public:
};

AddFriendRsp::AddFriendRsp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ChatServer.Chat.AddFriendRsp)
}
AddFriendRsp::AddFriendRsp(
    ::google::protobuf::Arena* arena, const AddFriendRsp& from)
    : AddFriendRsp(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AddFriendRsp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AddFriendRsp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, error_),
           0,
           offsetof(Impl_, touid_) -
               offsetof(Impl_, error_) +
               sizeof(Impl_::touid_));
}
AddFriendRsp::~AddFriendRsp() {
  // @@protoc_insertion_point(destructor:ChatServer.Chat.AddFriendRsp)
  SharedDtor(*this);
}
inline void AddFriendRsp::SharedDtor(MessageLite& self) {
  AddFriendRsp& this_ = static_cast<AddFriendRsp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AddFriendRsp::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AddFriendRsp(arena);
}
constexpr auto AddFriendRsp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AddFriendRsp),
                                            alignof(AddFriendRsp));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AddFriendRsp::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AddFriendRsp_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AddFriendRsp::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AddFriendRsp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AddFriendRsp::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AddFriendRsp>(), &AddFriendRsp::ByteSizeLong,
            &AddFriendRsp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AddFriendRsp, _impl_._cached_size_),
        false,
    },
    &AddFriendRsp::kDescriptorMethods,
    &descriptor_table_ChatServer_2eChat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AddFriendRsp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AddFriendRsp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ChatServer::Chat::AddFriendRsp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 error = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AddFriendRsp, _impl_.error_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendRsp, _impl_.error_)}},
    // int32 applyuid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AddFriendRsp, _impl_.applyuid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendRsp, _impl_.applyuid_)}},
    // int32 touid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AddFriendRsp, _impl_.touid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendRsp, _impl_.touid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 error = 1;
    {PROTOBUF_FIELD_OFFSET(AddFriendRsp, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 applyuid = 2;
    {PROTOBUF_FIELD_OFFSET(AddFriendRsp, _impl_.applyuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 touid = 3;
    {PROTOBUF_FIELD_OFFSET(AddFriendRsp, _impl_.touid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AddFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatServer.Chat.AddFriendRsp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.error_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.touid_) -
      reinterpret_cast<char*>(&_impl_.error_)) + sizeof(_impl_.touid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AddFriendRsp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AddFriendRsp& this_ = static_cast<const AddFriendRsp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AddFriendRsp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AddFriendRsp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ChatServer.Chat.AddFriendRsp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 error = 1;
          if (this_._internal_error() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_error(), target);
          }

          // int32 applyuid = 2;
          if (this_._internal_applyuid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_applyuid(), target);
          }

          // int32 touid = 3;
          if (this_._internal_touid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_touid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ChatServer.Chat.AddFriendRsp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AddFriendRsp::ByteSizeLong(const MessageLite& base) {
          const AddFriendRsp& this_ = static_cast<const AddFriendRsp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AddFriendRsp::ByteSizeLong() const {
          const AddFriendRsp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ChatServer.Chat.AddFriendRsp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 error = 1;
            if (this_._internal_error() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_error());
            }
            // int32 applyuid = 2;
            if (this_._internal_applyuid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_applyuid());
            }
            // int32 touid = 3;
            if (this_._internal_touid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_touid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AddFriendRsp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddFriendRsp*>(&to_msg);
  auto& from = static_cast<const AddFriendRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ChatServer.Chat.AddFriendRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_impl_.error_ = from._impl_.error_;
  }
  if (from._internal_applyuid() != 0) {
    _this->_impl_.applyuid_ = from._impl_.applyuid_;
  }
  if (from._internal_touid() != 0) {
    _this->_impl_.touid_ = from._impl_.touid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddFriendRsp::CopyFrom(const AddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatServer.Chat.AddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddFriendRsp::InternalSwap(AddFriendRsp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddFriendRsp, _impl_.touid_)
      + sizeof(AddFriendRsp::_impl_.touid_)
      - PROTOBUF_FIELD_OFFSET(AddFriendRsp, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::google::protobuf::Metadata AddFriendRsp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AuthFriendReq::_Internal {
 public:
};

AuthFriendReq::AuthFriendReq(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ChatServer.Chat.AuthFriendReq)
}
AuthFriendReq::AuthFriendReq(
    ::google::protobuf::Arena* arena, const AuthFriendReq& from)
    : AuthFriendReq(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AuthFriendReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AuthFriendReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fromuid_),
           0,
           offsetof(Impl_, touid_) -
               offsetof(Impl_, fromuid_) +
               sizeof(Impl_::touid_));
}
AuthFriendReq::~AuthFriendReq() {
  // @@protoc_insertion_point(destructor:ChatServer.Chat.AuthFriendReq)
  SharedDtor(*this);
}
inline void AuthFriendReq::SharedDtor(MessageLite& self) {
  AuthFriendReq& this_ = static_cast<AuthFriendReq&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AuthFriendReq::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AuthFriendReq(arena);
}
constexpr auto AuthFriendReq::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AuthFriendReq),
                                            alignof(AuthFriendReq));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AuthFriendReq::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AuthFriendReq_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AuthFriendReq::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AuthFriendReq>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AuthFriendReq::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AuthFriendReq>(), &AuthFriendReq::ByteSizeLong,
            &AuthFriendReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AuthFriendReq, _impl_._cached_size_),
        false,
    },
    &AuthFriendReq::kDescriptorMethods,
    &descriptor_table_ChatServer_2eChat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AuthFriendReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AuthFriendReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ChatServer::Chat::AuthFriendReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 touid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthFriendReq, _impl_.touid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AuthFriendReq, _impl_.touid_)}},
    // int32 fromuid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthFriendReq, _impl_.fromuid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AuthFriendReq, _impl_.fromuid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 fromuid = 1;
    {PROTOBUF_FIELD_OFFSET(AuthFriendReq, _impl_.fromuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 touid = 2;
    {PROTOBUF_FIELD_OFFSET(AuthFriendReq, _impl_.touid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AuthFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatServer.Chat.AuthFriendReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.fromuid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.touid_) -
      reinterpret_cast<char*>(&_impl_.fromuid_)) + sizeof(_impl_.touid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AuthFriendReq::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AuthFriendReq& this_ = static_cast<const AuthFriendReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AuthFriendReq::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AuthFriendReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ChatServer.Chat.AuthFriendReq)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 fromuid = 1;
          if (this_._internal_fromuid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_fromuid(), target);
          }

          // int32 touid = 2;
          if (this_._internal_touid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_touid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ChatServer.Chat.AuthFriendReq)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AuthFriendReq::ByteSizeLong(const MessageLite& base) {
          const AuthFriendReq& this_ = static_cast<const AuthFriendReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AuthFriendReq::ByteSizeLong() const {
          const AuthFriendReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ChatServer.Chat.AuthFriendReq)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 fromuid = 1;
            if (this_._internal_fromuid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_fromuid());
            }
            // int32 touid = 2;
            if (this_._internal_touid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_touid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AuthFriendReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AuthFriendReq*>(&to_msg);
  auto& from = static_cast<const AuthFriendReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ChatServer.Chat.AuthFriendReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fromuid() != 0) {
    _this->_impl_.fromuid_ = from._impl_.fromuid_;
  }
  if (from._internal_touid() != 0) {
    _this->_impl_.touid_ = from._impl_.touid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthFriendReq::CopyFrom(const AuthFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatServer.Chat.AuthFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuthFriendReq::InternalSwap(AuthFriendReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuthFriendReq, _impl_.touid_)
      + sizeof(AuthFriendReq::_impl_.touid_)
      - PROTOBUF_FIELD_OFFSET(AuthFriendReq, _impl_.fromuid_)>(
          reinterpret_cast<char*>(&_impl_.fromuid_),
          reinterpret_cast<char*>(&other->_impl_.fromuid_));
}

::google::protobuf::Metadata AuthFriendReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AuthFriendRsp::_Internal {
 public:
};

AuthFriendRsp::AuthFriendRsp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ChatServer.Chat.AuthFriendRsp)
}
AuthFriendRsp::AuthFriendRsp(
    ::google::protobuf::Arena* arena, const AuthFriendRsp& from)
    : AuthFriendRsp(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AuthFriendRsp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AuthFriendRsp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, error_),
           0,
           offsetof(Impl_, touid_) -
               offsetof(Impl_, error_) +
               sizeof(Impl_::touid_));
}
AuthFriendRsp::~AuthFriendRsp() {
  // @@protoc_insertion_point(destructor:ChatServer.Chat.AuthFriendRsp)
  SharedDtor(*this);
}
inline void AuthFriendRsp::SharedDtor(MessageLite& self) {
  AuthFriendRsp& this_ = static_cast<AuthFriendRsp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AuthFriendRsp::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AuthFriendRsp(arena);
}
constexpr auto AuthFriendRsp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AuthFriendRsp),
                                            alignof(AuthFriendRsp));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AuthFriendRsp::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AuthFriendRsp_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AuthFriendRsp::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AuthFriendRsp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AuthFriendRsp::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AuthFriendRsp>(), &AuthFriendRsp::ByteSizeLong,
            &AuthFriendRsp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AuthFriendRsp, _impl_._cached_size_),
        false,
    },
    &AuthFriendRsp::kDescriptorMethods,
    &descriptor_table_ChatServer_2eChat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AuthFriendRsp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AuthFriendRsp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ChatServer::Chat::AuthFriendRsp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 error = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthFriendRsp, _impl_.error_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AuthFriendRsp, _impl_.error_)}},
    // int32 fromuid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthFriendRsp, _impl_.fromuid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AuthFriendRsp, _impl_.fromuid_)}},
    // int32 touid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthFriendRsp, _impl_.touid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AuthFriendRsp, _impl_.touid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 error = 1;
    {PROTOBUF_FIELD_OFFSET(AuthFriendRsp, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 fromuid = 2;
    {PROTOBUF_FIELD_OFFSET(AuthFriendRsp, _impl_.fromuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 touid = 3;
    {PROTOBUF_FIELD_OFFSET(AuthFriendRsp, _impl_.touid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AuthFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatServer.Chat.AuthFriendRsp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.error_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.touid_) -
      reinterpret_cast<char*>(&_impl_.error_)) + sizeof(_impl_.touid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AuthFriendRsp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AuthFriendRsp& this_ = static_cast<const AuthFriendRsp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AuthFriendRsp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AuthFriendRsp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ChatServer.Chat.AuthFriendRsp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 error = 1;
          if (this_._internal_error() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_error(), target);
          }

          // int32 fromuid = 2;
          if (this_._internal_fromuid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_fromuid(), target);
          }

          // int32 touid = 3;
          if (this_._internal_touid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_touid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ChatServer.Chat.AuthFriendRsp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AuthFriendRsp::ByteSizeLong(const MessageLite& base) {
          const AuthFriendRsp& this_ = static_cast<const AuthFriendRsp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AuthFriendRsp::ByteSizeLong() const {
          const AuthFriendRsp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ChatServer.Chat.AuthFriendRsp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 error = 1;
            if (this_._internal_error() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_error());
            }
            // int32 fromuid = 2;
            if (this_._internal_fromuid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_fromuid());
            }
            // int32 touid = 3;
            if (this_._internal_touid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_touid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AuthFriendRsp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AuthFriendRsp*>(&to_msg);
  auto& from = static_cast<const AuthFriendRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ChatServer.Chat.AuthFriendRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_impl_.error_ = from._impl_.error_;
  }
  if (from._internal_fromuid() != 0) {
    _this->_impl_.fromuid_ = from._impl_.fromuid_;
  }
  if (from._internal_touid() != 0) {
    _this->_impl_.touid_ = from._impl_.touid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthFriendRsp::CopyFrom(const AuthFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatServer.Chat.AuthFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuthFriendRsp::InternalSwap(AuthFriendRsp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuthFriendRsp, _impl_.touid_)
      + sizeof(AuthFriendRsp::_impl_.touid_)
      - PROTOBUF_FIELD_OFFSET(AuthFriendRsp, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::google::protobuf::Metadata AuthFriendRsp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TextChatMsgReq::_Internal {
 public:
};

TextChatMsgReq::TextChatMsgReq(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ChatServer.Chat.TextChatMsgReq)
}
inline PROTOBUF_NDEBUG_INLINE TextChatMsgReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ChatServer::Chat::TextChatMsgReq& from_msg)
      : textmsgs_{visibility, arena, from.textmsgs_},
        _cached_size_{0} {}

TextChatMsgReq::TextChatMsgReq(
    ::google::protobuf::Arena* arena,
    const TextChatMsgReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TextChatMsgReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fromid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fromid_),
           offsetof(Impl_, toid_) -
               offsetof(Impl_, fromid_) +
               sizeof(Impl_::toid_));

  // @@protoc_insertion_point(copy_constructor:ChatServer.Chat.TextChatMsgReq)
}
inline PROTOBUF_NDEBUG_INLINE TextChatMsgReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : textmsgs_{visibility, arena},
        _cached_size_{0} {}

inline void TextChatMsgReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fromid_),
           0,
           offsetof(Impl_, toid_) -
               offsetof(Impl_, fromid_) +
               sizeof(Impl_::toid_));
}
TextChatMsgReq::~TextChatMsgReq() {
  // @@protoc_insertion_point(destructor:ChatServer.Chat.TextChatMsgReq)
  SharedDtor(*this);
}
inline void TextChatMsgReq::SharedDtor(MessageLite& self) {
  TextChatMsgReq& this_ = static_cast<TextChatMsgReq&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TextChatMsgReq::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TextChatMsgReq(arena);
}
constexpr auto TextChatMsgReq::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TextChatMsgReq, _impl_.textmsgs_) +
          decltype(TextChatMsgReq::_impl_.textmsgs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TextChatMsgReq), alignof(TextChatMsgReq), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TextChatMsgReq::PlacementNew_,
                                 sizeof(TextChatMsgReq),
                                 alignof(TextChatMsgReq));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TextChatMsgReq::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TextChatMsgReq_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TextChatMsgReq::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TextChatMsgReq>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TextChatMsgReq::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TextChatMsgReq>(), &TextChatMsgReq::ByteSizeLong,
            &TextChatMsgReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TextChatMsgReq, _impl_._cached_size_),
        false,
    },
    &TextChatMsgReq::kDescriptorMethods,
    &descriptor_table_ChatServer_2eChat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TextChatMsgReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> TextChatMsgReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ChatServer::Chat::TextChatMsgReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 fromid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextChatMsgReq, _impl_.fromid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TextChatMsgReq, _impl_.fromid_)}},
    // int32 toid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextChatMsgReq, _impl_.toid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TextChatMsgReq, _impl_.toid_)}},
    // repeated .ChatServer.Chat.TextChatData textmsgs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TextChatMsgReq, _impl_.textmsgs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 fromid = 1;
    {PROTOBUF_FIELD_OFFSET(TextChatMsgReq, _impl_.fromid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 toid = 2;
    {PROTOBUF_FIELD_OFFSET(TextChatMsgReq, _impl_.toid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .ChatServer.Chat.TextChatData textmsgs = 3;
    {PROTOBUF_FIELD_OFFSET(TextChatMsgReq, _impl_.textmsgs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ChatServer::Chat::TextChatData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TextChatMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatServer.Chat.TextChatMsgReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.textmsgs_.Clear();
  ::memset(&_impl_.fromid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.toid_) -
      reinterpret_cast<char*>(&_impl_.fromid_)) + sizeof(_impl_.toid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TextChatMsgReq::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TextChatMsgReq& this_ = static_cast<const TextChatMsgReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TextChatMsgReq::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TextChatMsgReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ChatServer.Chat.TextChatMsgReq)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 fromid = 1;
          if (this_._internal_fromid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_fromid(), target);
          }

          // int32 toid = 2;
          if (this_._internal_toid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_toid(), target);
          }

          // repeated .ChatServer.Chat.TextChatData textmsgs = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_textmsgs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_textmsgs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ChatServer.Chat.TextChatMsgReq)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TextChatMsgReq::ByteSizeLong(const MessageLite& base) {
          const TextChatMsgReq& this_ = static_cast<const TextChatMsgReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TextChatMsgReq::ByteSizeLong() const {
          const TextChatMsgReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ChatServer.Chat.TextChatMsgReq)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .ChatServer.Chat.TextChatData textmsgs = 3;
            {
              total_size += 1UL * this_._internal_textmsgs_size();
              for (const auto& msg : this_._internal_textmsgs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int32 fromid = 1;
            if (this_._internal_fromid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_fromid());
            }
            // int32 toid = 2;
            if (this_._internal_toid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_toid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TextChatMsgReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TextChatMsgReq*>(&to_msg);
  auto& from = static_cast<const TextChatMsgReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ChatServer.Chat.TextChatMsgReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_textmsgs()->MergeFrom(
      from._internal_textmsgs());
  if (from._internal_fromid() != 0) {
    _this->_impl_.fromid_ = from._impl_.fromid_;
  }
  if (from._internal_toid() != 0) {
    _this->_impl_.toid_ = from._impl_.toid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TextChatMsgReq::CopyFrom(const TextChatMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatServer.Chat.TextChatMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TextChatMsgReq::InternalSwap(TextChatMsgReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.textmsgs_.InternalSwap(&other->_impl_.textmsgs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TextChatMsgReq, _impl_.toid_)
      + sizeof(TextChatMsgReq::_impl_.toid_)
      - PROTOBUF_FIELD_OFFSET(TextChatMsgReq, _impl_.fromid_)>(
          reinterpret_cast<char*>(&_impl_.fromid_),
          reinterpret_cast<char*>(&other->_impl_.fromid_));
}

::google::protobuf::Metadata TextChatMsgReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TextChatData::_Internal {
 public:
};

TextChatData::TextChatData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ChatServer.Chat.TextChatData)
}
inline PROTOBUF_NDEBUG_INLINE TextChatData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ChatServer::Chat::TextChatData& from_msg)
      : msgid_(arena, from.msgid_),
        msgcontent_(arena, from.msgcontent_),
        _cached_size_{0} {}

TextChatData::TextChatData(
    ::google::protobuf::Arena* arena,
    const TextChatData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TextChatData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ChatServer.Chat.TextChatData)
}
inline PROTOBUF_NDEBUG_INLINE TextChatData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msgid_(arena),
        msgcontent_(arena),
        _cached_size_{0} {}

inline void TextChatData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TextChatData::~TextChatData() {
  // @@protoc_insertion_point(destructor:ChatServer.Chat.TextChatData)
  SharedDtor(*this);
}
inline void TextChatData::SharedDtor(MessageLite& self) {
  TextChatData& this_ = static_cast<TextChatData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.msgid_.Destroy();
  this_._impl_.msgcontent_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TextChatData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TextChatData(arena);
}
constexpr auto TextChatData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TextChatData),
                                            alignof(TextChatData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TextChatData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TextChatData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TextChatData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TextChatData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TextChatData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TextChatData>(), &TextChatData::ByteSizeLong,
            &TextChatData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TextChatData, _impl_._cached_size_),
        false,
    },
    &TextChatData::kDescriptorMethods,
    &descriptor_table_ChatServer_2eChat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TextChatData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 52, 2> TextChatData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ChatServer::Chat::TextChatData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string msgcontent = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TextChatData, _impl_.msgcontent_)}},
    // string msgid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TextChatData, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string msgid = 1;
    {PROTOBUF_FIELD_OFFSET(TextChatData, _impl_.msgid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string msgcontent = 2;
    {PROTOBUF_FIELD_OFFSET(TextChatData, _impl_.msgcontent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\5\12\0\0\0\0\0"
    "ChatServer.Chat.TextChatData"
    "msgid"
    "msgcontent"
  }},
};

PROTOBUF_NOINLINE void TextChatData::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatServer.Chat.TextChatData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msgid_.ClearToEmpty();
  _impl_.msgcontent_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TextChatData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TextChatData& this_ = static_cast<const TextChatData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TextChatData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TextChatData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ChatServer.Chat.TextChatData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string msgid = 1;
          if (!this_._internal_msgid().empty()) {
            const std::string& _s = this_._internal_msgid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ChatServer.Chat.TextChatData.msgid");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string msgcontent = 2;
          if (!this_._internal_msgcontent().empty()) {
            const std::string& _s = this_._internal_msgcontent();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ChatServer.Chat.TextChatData.msgcontent");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ChatServer.Chat.TextChatData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TextChatData::ByteSizeLong(const MessageLite& base) {
          const TextChatData& this_ = static_cast<const TextChatData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TextChatData::ByteSizeLong() const {
          const TextChatData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ChatServer.Chat.TextChatData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string msgid = 1;
            if (!this_._internal_msgid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_msgid());
            }
            // string msgcontent = 2;
            if (!this_._internal_msgcontent().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_msgcontent());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TextChatData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TextChatData*>(&to_msg);
  auto& from = static_cast<const TextChatData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ChatServer.Chat.TextChatData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msgid().empty()) {
    _this->_internal_set_msgid(from._internal_msgid());
  }
  if (!from._internal_msgcontent().empty()) {
    _this->_internal_set_msgcontent(from._internal_msgcontent());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TextChatData::CopyFrom(const TextChatData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatServer.Chat.TextChatData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TextChatData::InternalSwap(TextChatData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msgid_, &other->_impl_.msgid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msgcontent_, &other->_impl_.msgcontent_, arena);
}

::google::protobuf::Metadata TextChatData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TextChatMsgRsp::_Internal {
 public:
};

TextChatMsgRsp::TextChatMsgRsp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ChatServer.Chat.TextChatMsgRsp)
}
inline PROTOBUF_NDEBUG_INLINE TextChatMsgRsp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ChatServer::Chat::TextChatMsgRsp& from_msg)
      : textmsgs_{visibility, arena, from.textmsgs_},
        _cached_size_{0} {}

TextChatMsgRsp::TextChatMsgRsp(
    ::google::protobuf::Arena* arena,
    const TextChatMsgRsp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TextChatMsgRsp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fromid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fromid_),
           offsetof(Impl_, error_) -
               offsetof(Impl_, fromid_) +
               sizeof(Impl_::error_));

  // @@protoc_insertion_point(copy_constructor:ChatServer.Chat.TextChatMsgRsp)
}
inline PROTOBUF_NDEBUG_INLINE TextChatMsgRsp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : textmsgs_{visibility, arena},
        _cached_size_{0} {}

inline void TextChatMsgRsp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fromid_),
           0,
           offsetof(Impl_, error_) -
               offsetof(Impl_, fromid_) +
               sizeof(Impl_::error_));
}
TextChatMsgRsp::~TextChatMsgRsp() {
  // @@protoc_insertion_point(destructor:ChatServer.Chat.TextChatMsgRsp)
  SharedDtor(*this);
}
inline void TextChatMsgRsp::SharedDtor(MessageLite& self) {
  TextChatMsgRsp& this_ = static_cast<TextChatMsgRsp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TextChatMsgRsp::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TextChatMsgRsp(arena);
}
constexpr auto TextChatMsgRsp::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_.textmsgs_) +
          decltype(TextChatMsgRsp::_impl_.textmsgs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TextChatMsgRsp), alignof(TextChatMsgRsp), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TextChatMsgRsp::PlacementNew_,
                                 sizeof(TextChatMsgRsp),
                                 alignof(TextChatMsgRsp));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TextChatMsgRsp::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TextChatMsgRsp_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TextChatMsgRsp::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TextChatMsgRsp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TextChatMsgRsp::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TextChatMsgRsp>(), &TextChatMsgRsp::ByteSizeLong,
            &TextChatMsgRsp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_._cached_size_),
        false,
    },
    &TextChatMsgRsp::kDescriptorMethods,
    &descriptor_table_ChatServer_2eChat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TextChatMsgRsp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> TextChatMsgRsp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ChatServer::Chat::TextChatMsgRsp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 error = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextChatMsgRsp, _impl_.error_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_.error_)}},
    // int32 fromid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextChatMsgRsp, _impl_.fromid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_.fromid_)}},
    // int32 toid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TextChatMsgRsp, _impl_.toid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_.toid_)}},
    // repeated .ChatServer.Chat.TextChatData textmsgs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_.textmsgs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 fromid = 1;
    {PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_.fromid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 toid = 2;
    {PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_.toid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .ChatServer.Chat.TextChatData textmsgs = 3;
    {PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_.textmsgs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 error = 4;
    {PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ChatServer::Chat::TextChatData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TextChatMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatServer.Chat.TextChatMsgRsp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.textmsgs_.Clear();
  ::memset(&_impl_.fromid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.fromid_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TextChatMsgRsp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TextChatMsgRsp& this_ = static_cast<const TextChatMsgRsp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TextChatMsgRsp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TextChatMsgRsp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ChatServer.Chat.TextChatMsgRsp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 fromid = 1;
          if (this_._internal_fromid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_fromid(), target);
          }

          // int32 toid = 2;
          if (this_._internal_toid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_toid(), target);
          }

          // repeated .ChatServer.Chat.TextChatData textmsgs = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_textmsgs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_textmsgs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 error = 4;
          if (this_._internal_error() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_error(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ChatServer.Chat.TextChatMsgRsp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TextChatMsgRsp::ByteSizeLong(const MessageLite& base) {
          const TextChatMsgRsp& this_ = static_cast<const TextChatMsgRsp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TextChatMsgRsp::ByteSizeLong() const {
          const TextChatMsgRsp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ChatServer.Chat.TextChatMsgRsp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .ChatServer.Chat.TextChatData textmsgs = 3;
            {
              total_size += 1UL * this_._internal_textmsgs_size();
              for (const auto& msg : this_._internal_textmsgs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int32 fromid = 1;
            if (this_._internal_fromid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_fromid());
            }
            // int32 toid = 2;
            if (this_._internal_toid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_toid());
            }
            // int32 error = 4;
            if (this_._internal_error() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_error());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TextChatMsgRsp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TextChatMsgRsp*>(&to_msg);
  auto& from = static_cast<const TextChatMsgRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ChatServer.Chat.TextChatMsgRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_textmsgs()->MergeFrom(
      from._internal_textmsgs());
  if (from._internal_fromid() != 0) {
    _this->_impl_.fromid_ = from._impl_.fromid_;
  }
  if (from._internal_toid() != 0) {
    _this->_impl_.toid_ = from._impl_.toid_;
  }
  if (from._internal_error() != 0) {
    _this->_impl_.error_ = from._impl_.error_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TextChatMsgRsp::CopyFrom(const TextChatMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatServer.Chat.TextChatMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TextChatMsgRsp::InternalSwap(TextChatMsgRsp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.textmsgs_.InternalSwap(&other->_impl_.textmsgs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_.error_)
      + sizeof(TextChatMsgRsp::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(TextChatMsgRsp, _impl_.fromid_)>(
          reinterpret_cast<char*>(&_impl_.fromid_),
          reinterpret_cast<char*>(&other->_impl_.fromid_));
}

::google::protobuf::Metadata TextChatMsgRsp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Chat
}  // namespace ChatServer
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_ChatServer_2eChat_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
